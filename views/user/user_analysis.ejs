<div class="container-xl">
    <div class="row">
        <div class="col-xl-12" style="width: 724px;height: 400px; display: block;margin-left: 140px; ">
            <h2>Expenses Analysis</h2>
            <canvas id="myChart"></canvas>
        </div>
    </div>
</div>

<!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script> -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js">
</script>
<script>
    // Retrieve the data passed from the server
    const lineChartDates = JSON.parse('<%- JSON.stringify(lineChartDates) %>');
    const lineChartPrices = JSON.parse('<%- JSON.stringify(lineChartPrices) %>');

    // Combine dates and prices into a dataset
    const lineChartData = lineChartDates.map((dateStr, index) => {
        const [day, month, year] = dateStr.split('-');
        const formattedDate = `${year}-${month}-${day}`;
        return {
            x: new Date(formattedDate),
            y: lineChartPrices[index]
        };
    });

    // Sort the data by date
    lineChartData.sort((a, b) => a.x - b.x);

    // Separate dates and prices for labels and data
    const labels = lineChartData.map(data => {
        const day = String(data.x.getDate()).padStart(2, '0');
        const month = String(data.x.getMonth() + 1).padStart(2, '0');
        const year = data.x.getFullYear();
        return `${day}-${month}-${year}`;
    });
    const data = lineChartData.map(data => data.y);

    // Get the canvas context
    const ctx = document.getElementById('myChart').getContext('2d');

    // Create a new line chart
    new Chart(ctx, {
        type: 'line',
        data: {
            labels: labels,
            datasets: [{
                label: 'User Expenses',
                data: data,
                borderColor: 'blue',
                fill: false,
                pointRadius: 5,
                pointBackgroundColor: 'blue'
            }]
        },
        options: {
            responsive: true,
            scales: {
                x: {
                    type: 'time',
                    time: {
                        unit: 'day',
                        tooltipFormat: 'DD-MM-YYYY',
                        displayFormats: {
                            day: 'DD-MM-YYYY'
                        }
                    },
                    title: {
                        display: false
                    },
                    grid: {
                        display: false
                    },
                    ticks: {
                        source: 'auto'
                    }
                },
                y: {
                    title: {
                        display: false
                    },
                    grid: {
                        display: false
                    },
                    ticks: {
                        callback: function(value, index, values) {
                            // Return only even multiples of 20000 within the data range
                            const minValue = Math.ceil(Math.min(...data) / 20000) * 20000;
                            const maxValue = Math.ceil(Math.max(...data) / 20000) * 20000;
                            if (index % 2 === 0 && value >= minValue && value <= maxValue) {
                                return value.toLocaleString(); // Format numbers with commas
                            }
                            return ''; // Hide non-matching ticks
                        }
                    }
                }
            },
            plugins: {
                legend: {
                    display: true,
                    position: 'top'
                }
            }
        }
    });
</script>

<!-- <script>
    // Retrieve the data passed from the server
    const lineChartDates = JSON.parse('<%- JSON.stringify(lineChartDates) %>');
    const lineChartPrices = JSON.parse('<%- JSON.stringify(lineChartPrices) %>');

    // Combine dates and prices into a dataset
    const lineChartData = lineChartDates.map((dateStr, index) => {
        // Convert DD-MM-YYYY to YYYY-MM-DD
        const [day, month, year] = dateStr.split('-');
        const formattedDate = `${year}-${month}-${day}`;
        return {
            x: formattedDate, // Convert string to Date object and to ISO format
            y: lineChartPrices[index]
        };
    });

    // Separate dates and prices for labels and data
    const labels = lineChartData.map(data => data.x);
    const data = lineChartData.map(data => data.y);

    // Get the canvas context
    const ctx = document.getElementById('myChart').getContext('2d');

    // Create a new line chart
    new Chart(ctx, {
        type: 'line',
        data: {
            labels: labels,
            datasets: [{
                label: 'User Expenses',
                data: data,
                borderColor: 'blue',
                fill: false,
                pointRadius: 5,
                pointBackgroundColor: 'blue'
            }]
        },
        options: {
            responsive: true,
            scales: {
                x: {
                    type: 'time',
                    time: {
                        unit: 'day',
                        tooltipFormat: 'DD-MM-YYYY',
                        displayFormats: {
                            day: 'DD-MM-YYYY'
                        }
                    },
                    title: {
                        display: true,
                        text: 'Date'
                    },
                    ticks: {
                        source: 'auto'
                    }
                },
                y: {
                    title: {
                        display: true,
                        text: 'Price'
                    },
                    beginAtZero: true
                }
            },
            plugins: {
                legend: {
                    display: true,
                    position: 'top'
                }
            }
        }
    });
</script> -->